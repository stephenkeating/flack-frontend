{"ast":null,"code":"import _objectSpread from \"/Users/stephenkeating/Development/code/mod-4/flack-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/stephenkeating/Development/code/mod-4/flack-frontend/src/containers/ChatWindow.js\";\nimport React, { Component } from \"react\";\nimport Chat from '../components/Chat.js';\nimport NewChat from '../components/NewChat.js';\n\nclass ChatWindow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channel: this.props.channel,\n      channelChats: []\n    };\n\n    this.renderChat = () => {\n      return this.state.channelChats.map(chat => React.createElement(Chat, {\n        chat: chat,\n        message: chat.message,\n        name: chat.user.name,\n        user: this.props.user,\n        removeChat: this.removeChat,\n        key: chat.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    };\n\n    this.addNewChatToChannelChats = newChat => {\n      const newlyCreatedChat = _objectSpread({}, newChat);\n\n      this.setState({\n        channelChats: [...this.state.channelChats, newlyCreatedChat]\n      });\n    };\n\n    this.removeChat = chatToRemove => {\n      // console.log(chatToRemove)\n      this.setState({\n        channelChats: this.state.channelChats.filter(chat => chat.id !== chatToRemove)\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/channels/${this.state.channel.id}`).then(r => r.json()).then(channel => this.setState({\n      channelChats: channel.chats.sort((a, b) => a.updated_at - b.updated_at)\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" \", this.state.channel.name, \" \")), this.renderChat(), this.state.channelChats.length > 0 ? React.createElement(NewChat, {\n      user: this.props.user,\n      addNewChatToChannelChats: this.addNewChatToChannelChats,\n      channel: this.state.channel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }) : `Please choose a user and channel.`);\n  }\n\n}\n\nexport default ChatWindow; // { this.state.channel.name\n//   ? <div className='chat-window'>\n//     <ChatWindow \n//       channel={this.state.channel} \n//       // chats={this.state.channelChats} \n//       user={this.state.user}\n//       // addNewChatToChannelChats={this.addNewChatToChannelChats}\n//       // removeChat={this.removeChat}\n//       key={this.state.channel.id}\n//     />\n//     </div>\n//   : null\n// }","map":{"version":3,"sources":["/Users/stephenkeating/Development/code/mod-4/flack-frontend/src/containers/ChatWindow.js"],"names":["React","Component","Chat","NewChat","ChatWindow","state","channel","props","channelChats","renderChat","map","chat","message","user","name","removeChat","id","addNewChatToChannelChats","newChat","newlyCreatedChat","setState","chatToRemove","filter","componentDidMount","fetch","then","r","json","chats","sort","a","b","updated_at","catch","err","console","log","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Chat from '../components/Chat.js';\nimport NewChat from '../components/NewChat.js';\n\n\nclass ChatWindow extends Component {\n\n  state = {\n    channel: this.props.channel,\n    channelChats: []\n  }\n\n  componentDidMount() {\n  \n      fetch(`http://localhost:3000/channels/${this.state.channel.id}`)\n        .then(r => r.json())\n        .then(channel => this.setState({channelChats: channel.chats.sort((a, b) => a.updated_at - b.updated_at)}))\n        .catch(err => console.log(err))\n  }\n\n  renderChat = () => {\n    return this.state.channelChats.map(chat => \n    <Chat \n      chat={chat} \n      message={chat.message} \n      name={chat.user.name} \n      user={this.props.user} \n      removeChat={this.removeChat} \n      key={chat.id}\n    />)\n  }\n  \n  addNewChatToChannelChats = (newChat) => {\n    const newlyCreatedChat = {...newChat}\n    this.setState({channelChats: [...this.state.channelChats, newlyCreatedChat]})\n  }\n\n  removeChat = (chatToRemove) => {\n    // console.log(chatToRemove)\n    this.setState({channelChats: this.state.channelChats.filter(chat => chat.id !== chatToRemove)})\n  }\n\n  render() {\n    console.log(this.props)\n    return (\n      <div >\n        <div>\n\n        <h3> {this.state.channel.name} </h3>\n        {/* {this.props.channel.description} */}\n\n        </div>\n        {this.renderChat()}\n        {this.state.channelChats.length > 0 ? <NewChat user={this.props.user} addNewChatToChannelChats={this.addNewChatToChannelChats} channel={this.state.channel} /> : `Please choose a user and channel.`}\n      </div>\n    )\n  }\n}\n\nexport default ChatWindow;\n\n\n// { this.state.channel.name\n//   ? <div className='chat-window'>\n//     <ChatWindow \n//       channel={this.state.channel} \n//       // chats={this.state.channelChats} \n//       user={this.state.user}\n//       // addNewChatToChannelChats={this.addNewChatToChannelChats}\n//       // removeChat={this.removeChat}\n//       key={this.state.channel.id}\n//     />\n//     </div>\n//   : null\n// }"]},"metadata":{},"sourceType":"module"}