{"ast":null,"code":"import _objectSpread from \"/Users/stephenkeating/Development/code/mod-4/flack-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/stephenkeating/Development/code/mod-4/flack-frontend/src/containers/MainContainer.js\";\nimport React, { Component } from 'react';\nimport User from '../containers/User.js';\nimport Channels from '../containers/Channels.js';\nimport ChatWindow from '../containers/ChatWindow.js';\n\nclass MainContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      user: {},\n      userChannels: [],\n      channel: {},\n      channelChats: []\n    };\n\n    this.renderUsers = () => {\n      return this.state.users.map(user => React.createElement(User, {\n        user: user,\n        key: user.id,\n        selectUser: this.selectUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    };\n\n    this.selectUser = selectedUser => {\n      this.setState({\n        user: selectedUser,\n        userChannels: selectedUser.channel_users.map(channel_user => channel_user.channel)\n      });\n    };\n\n    this.renderChannels = () => {\n      return this.state.userChannels.map(channel => React.createElement(Channels, {\n        channel: channel,\n        key: channel.id,\n        selectChannel: this.selectChannel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    };\n\n    this.selectChannel = selectedChannel => {\n      this.setState({\n        channel: selectedChannel,\n        channelChats: selectedChannel.chats\n      });\n    };\n\n    this.addNewChatToChannelChats = newChat => {\n      const newlyCreatedChat = _objectSpread({}, newChat);\n\n      this.setState({\n        channelChats: [...this.state.channelChats, newlyCreatedChat]\n      });\n    };\n\n    this.removeChat = chatToRemove => {\n      this.setState({\n        channelChats: this.state.channelChats.filter(chat => chat.id !== chatToRemove.id)\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/users`).then(r => r.json()).then(users => this.setState({\n      users: users\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Flack\"), this.state.user.name ? React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Current User:\"), this.state.user.name) : React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Choose User:\"), this.renderUsers()), this.state.user.name ? React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Channels:\")) : null, this.state.user !== {} ? this.renderChannels() : null), this.state.channel.name ? React.createElement(\"div\", {\n      className: \"chat-window\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(ChatWindow, {\n      channel: this.state.channel,\n      chats: this.state.channelChats,\n      user: this.state.user,\n      addNewChatToChannelChats: this.addNewChatToChannelChats,\n      removeChat: this.removeChat,\n      key: this.state.channel.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })) : null);\n  }\n\n}\n\nexport default MainContainer;","map":{"version":3,"sources":["/Users/stephenkeating/Development/code/mod-4/flack-frontend/src/containers/MainContainer.js"],"names":["React","Component","User","Channels","ChatWindow","MainContainer","state","users","user","userChannels","channel","channelChats","renderUsers","map","id","selectUser","selectedUser","setState","channel_users","channel_user","renderChannels","selectChannel","selectedChannel","chats","addNewChatToChannelChats","newChat","newlyCreatedChat","removeChat","chatToRemove","filter","chat","componentDidMount","fetch","then","r","json","catch","err","console","log","render","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport User from '../containers/User.js';\nimport Channels from '../containers/Channels.js';\nimport ChatWindow from '../containers/ChatWindow.js';\n\n\nclass MainContainer extends Component  {\n\n  state = {\n    users: [],\n    user: {},\n    userChannels: [],\n    channel: {},\n    channelChats: []\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/users`)\n      .then(r => r.json())\n      .then(users => this.setState({users: users}))\n      .catch(err => console.log(err))\n  }\n\n  renderUsers = () => {\n    return this.state.users.map(user => <User user={user} key={user.id} selectUser={this.selectUser}/>)\n  }\n\n  selectUser = (selectedUser) => {\n    this.setState({user: selectedUser, userChannels: selectedUser.channel_users.map(channel_user => channel_user.channel)})\n  }\n  \n  renderChannels = () => {\n    return this.state.userChannels.map(channel => <Channels channel={channel} key={channel.id} selectChannel={this.selectChannel}/>)\n  }\n\n  selectChannel = (selectedChannel) => {\n    this.setState({channel: selectedChannel, channelChats: selectedChannel.chats})\n  }\n\n  addNewChatToChannelChats = (newChat) => {\n    const newlyCreatedChat = {...newChat}\n    this.setState({channelChats: [...this.state.channelChats, newlyCreatedChat]})\n  }\n\n  removeChat = (chatToRemove => {\n    this.setState({channelChats: this.state.channelChats.filter(chat => chat.id !== chatToRemove.id)})\n  })\n\n  render (){\n    console.log(this.state)\n\n    return(\n\n      <div className=\"app-container\">\n        <div className='left-nav'> \n          <h1>Flack</h1>\n          { this.state.user.name\n            ? <>\n              <h3>Current User:</h3>\n              {this.state.user.name}\n              </>\n            : <>\n                <h3>Choose User:</h3>\n                {this.renderUsers()}\n              </> \n          }\n          \n          { this.state.user.name\n            ? <>\n              <h3>Channels:</h3>\n              </>\n            : null\n          }\n          { this.state.user !== {} ? this.renderChannels() : null}\n        </div>\n\n        { this.state.channel.name\n            ? <div className='chat-window'>\n              <ChatWindow \n                channel={this.state.channel} \n                chats={this.state.channelChats} \n                user={this.state.user}\n                addNewChatToChannelChats={this.addNewChatToChannelChats}\n                removeChat={this.removeChat}\n                key={this.state.channel.id}\n              />\n              </div>\n            : null\n          }\n\n        \n      </div>\n\n    )\n  }\n}\n\nexport default MainContainer;\n"]},"metadata":{},"sourceType":"module"}