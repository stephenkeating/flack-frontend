{"ast":null,"code":"import _objectSpread from \"/Users/stephenkeating/Development/code/mod-4/flack-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/stephenkeating/Development/code/mod-4/flack-frontend/src/containers/ChatWindow.js\";\nimport React, { Component } from \"react\";\nimport Chat from '../components/Chat.js';\nimport NewChat from '../components/NewChat.js';\n\nclass ChatWindow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channel: this.props.channel,\n      channelChats: []\n    };\n\n    this.fetchChats = () => {\n      fetch(`http://localhost:3000/channels/${this.state.channel.id}`).then(r => r.json()).then(channel => this.setState({\n        channelChats: channel.chats.sort((a, b) => a.updated_at - b.updated_at)\n      })).catch(err => console.log(err));\n    };\n\n    this.renderChat = () => {\n      return this.state.channelChats.map(chat => React.createElement(Chat, {\n        chat: chat,\n        message: chat.message,\n        name: chat.user.name,\n        user: this.props.user,\n        removeChat: this.removeChat,\n        key: chat.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    };\n\n    this.addNewChatToChannelChats = newChat => {\n      const newlyCreatedChat = _objectSpread({}, newChat);\n\n      this.setState({\n        channelChats: [...this.state.channelChats, newlyCreatedChat]\n      });\n    };\n\n    this.removeChat = chatToRemove => {\n      // console.log(chatToRemove)\n      this.setState({\n        channelChats: this.state.channelChats.filter(chat => chat.id !== chatToRemove)\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchChats();\n    this.timer = setInterval(() => this.fetchChats(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" \", this.state.channel.name, \" \", `: ${this.props.channel.description}`)), this.renderChat(), React.createElement(NewChat, {\n      user: this.props.user,\n      addNewChatToChannelChats: this.addNewChatToChannelChats,\n      channel: this.state.channel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ChatWindow;","map":{"version":3,"sources":["/Users/stephenkeating/Development/code/mod-4/flack-frontend/src/containers/ChatWindow.js"],"names":["React","Component","Chat","NewChat","ChatWindow","state","channel","props","channelChats","fetchChats","fetch","id","then","r","json","setState","chats","sort","a","b","updated_at","catch","err","console","log","renderChat","map","chat","message","user","name","removeChat","addNewChatToChannelChats","newChat","newlyCreatedChat","chatToRemove","filter","componentDidMount","timer","setInterval","componentWillUnmount","clearInterval","render","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Chat from '../components/Chat.js';\nimport NewChat from '../components/NewChat.js';\n\n\nclass ChatWindow extends Component {\n\n  state = {\n    channel: this.props.channel,\n    channelChats: []\n  }\n\n  componentDidMount() {\n    this.fetchChats()\n    this.timer = setInterval(() => this.fetchChats(), 1000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n}\n\n  fetchChats = () => {\n    fetch(`http://localhost:3000/channels/${this.state.channel.id}`)\n    .then(r => r.json())\n    .then(channel => this.setState({channelChats: channel.chats.sort((a, b) => a.updated_at - b.updated_at)}))\n    .catch(err => console.log(err))\n  }\n\n  renderChat = () => {\n    return this.state.channelChats.map(chat => \n    <Chat \n      chat={chat} \n      message={chat.message} \n      name={chat.user.name} \n      user={this.props.user} \n      removeChat={this.removeChat} \n      key={chat.id}\n    />)\n  }\n  \n  addNewChatToChannelChats = (newChat) => {\n    const newlyCreatedChat = {...newChat}\n    this.setState({channelChats: [...this.state.channelChats, newlyCreatedChat]})\n  }\n\n  removeChat = (chatToRemove) => {\n    // console.log(chatToRemove)\n    this.setState({channelChats: this.state.channelChats.filter(chat => chat.id !== chatToRemove)})\n  }\n\n  render() {\n    console.log(this.props)\n    return (\n      <div >\n        <div>\n\n        <h3> {this.state.channel.name} {`: ${this.props.channel.description}`}</h3>\n        {/* {this.props.channel.description} */}\n\n        </div>\n        {this.renderChat()}\n        {<NewChat \n            user={this.props.user} \n            addNewChatToChannelChats={this.addNewChatToChannelChats} \n            channel={this.state.channel} \n          /> \n        }\n      </div>\n    )\n  }\n}\n\nexport default ChatWindow;"]},"metadata":{},"sourceType":"module"}