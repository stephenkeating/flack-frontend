{"ast":null,"code":"import _objectSpread from \"/Users/stephenkeating/Development/code/mod-4/flack-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/stephenkeating/Development/code/mod-4/flack-frontend/src/containers/ChatWindow.js\";\nimport React, { Component } from \"react\";\nimport Chat from '../components/Chat.js';\nimport NewChat from '../components/NewChat.js';\n\nclass ChatWindow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channel: this.props.channel,\n      channelChats: []\n    };\n\n    this.renderChat = () => {\n      return this.channelChats.chats.map(chat => React.createElement(Chat, {\n        chat: chat,\n        message: chat.message,\n        name: chat.user.name,\n        user: this.props.user,\n        removeChat: this.props.removeChat,\n        key: chat.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    };\n\n    this.addNewChatToChannelChats = newChat => {\n      const newlyCreatedChat = _objectSpread({}, newChat);\n\n      this.setState({\n        channelChats: [...this.state.channelChats, newlyCreatedChat]\n      });\n    };\n\n    this.removeChat = chatToRemove => {\n      // console.log(chatToRemove)\n      this.setState({\n        channelChats: this.state.channelChats.filter(chat => chat.id !== chatToRemove)\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/channels`).then(r => r.json()).then(chatsToLoad => this.setState({\n      channelChats: chatsToLoad.filter\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \" \", this.props.channel.name, \" \")), this.renderChat(), this.props.chats.length > 0 ? React.createElement(NewChat, {\n      user: this.props.user,\n      addNewChatToChannelChats: this.props.addNewChatToChannelChats,\n      channel: this.props.channel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : `Please choose a user and channel.`);\n  }\n\n}\n\nexport default ChatWindow;\n{\n  this.state.channel.name ? React.createElement(\"div\", {\n    className: \"chat-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(ChatWindow, {\n    channel: this.state.channel // chats={this.state.channelChats} \n    ,\n    user: this.state.user // addNewChatToChannelChats={this.addNewChatToChannelChats}\n    // removeChat={this.removeChat}\n    ,\n    key: this.state.channel.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })) : null;\n}","map":{"version":3,"sources":["/Users/stephenkeating/Development/code/mod-4/flack-frontend/src/containers/ChatWindow.js"],"names":["React","Component","Chat","NewChat","ChatWindow","state","channel","props","channelChats","renderChat","chats","map","chat","message","user","name","removeChat","id","addNewChatToChannelChats","newChat","newlyCreatedChat","setState","chatToRemove","filter","componentDidMount","fetch","then","r","json","chatsToLoad","catch","err","console","log","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Chat from '../components/Chat.js';\nimport NewChat from '../components/NewChat.js';\n\n\nclass ChatWindow extends Component {\n\n  state = {\n    channel: this.props.channel,\n    channelChats: []\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/channels`)\n      .then(r => r.json())\n      .then(chatsToLoad => this.setState({channelChats: chatsToLoad.filter}))\n      .catch(err => console.log(err))\n  }\n\n  renderChat = () => {\n    return this.channelChats.chats.map(chat => <Chat chat={chat} message={chat.message} name={chat.user.name} user={this.props.user} removeChat={this.props.removeChat} key={chat.id}/>)\n  }\n  \n  addNewChatToChannelChats = (newChat) => {\n    const newlyCreatedChat = {...newChat}\n    this.setState({channelChats: [...this.state.channelChats, newlyCreatedChat]})\n  }\n\n  removeChat = (chatToRemove) => {\n    // console.log(chatToRemove)\n    this.setState({channelChats: this.state.channelChats.filter(chat => chat.id !== chatToRemove)})\n  }\n\n  render() {\n    console.log(this.props)\n    return (\n      <div >\n        <div>\n\n        <h3> {this.props.channel.name} </h3>\n        {/* {this.props.channel.description} */}\n\n        </div>\n        {this.renderChat()}\n        {this.props.chats.length > 0 ? <NewChat user={this.props.user} addNewChatToChannelChats={this.props.addNewChatToChannelChats} channel={this.props.channel} /> : `Please choose a user and channel.`}\n      </div>\n    )\n  }\n}\n\nexport default ChatWindow;\n\n\n{ this.state.channel.name\n  ? <div className='chat-window'>\n    <ChatWindow \n      channel={this.state.channel} \n      // chats={this.state.channelChats} \n      user={this.state.user}\n      // addNewChatToChannelChats={this.addNewChatToChannelChats}\n      // removeChat={this.removeChat}\n      key={this.state.channel.id}\n    />\n    </div>\n  : null\n}"]},"metadata":{},"sourceType":"module"}